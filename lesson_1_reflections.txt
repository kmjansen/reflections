# How did viewing a diff between two versions of a file help you see the bug
that was introduced?

    Since we knew that the original file did
    not contain the bug, viewing the diff between two versions of a
    file helped me to see the bug that was introduced because it
    showed me exactly where the changes that caused the bug were
    introduced and what those changes were.

# How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Having easy access to the entire history of a file could make me a more
    efficient programmer by allowing me to see how changes affected my program
    and easily jump back to earlier versions if bugs are discovered.

# What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
Docs does?

    The pros of manually choosing when to create a commit include having control
    over the number, frequency, and content of the changed files. However, if
    one forgets to commit on a regular basis or at the right times, this can
    be counter-productive to the purpose of using version control which would
    be a pro of automatic commits. But automatic commits will cause the history
    of the file to have arbitrary point-in-time changes that may not compile nor
    make any sense in the context of a useful code function change.

# Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Some version control systems, like Git, allow saving multiple files in one
    commit because the files are interdependent. However, some version control
    systems like DropBox have the sole purpose of saving and retrieving individual
    files; so saving multiple files in one commit doesn't make sense.

# How can you use the commands git log and git diff to view the history of
files?

    Git log will show me every instance of the commits to a repository and each
    commit's associated id. Git diff will allow me to see exactly what changed
    between two different commits.

# How might using version control make you more confident to make changes that
could break something?

    Using version control could make me more confident to make changes that could
    break something by giving me the peace of mind that, should I break something,
    it can easily be reverted and/or located and fixed.

# What do you want to try using Git for?

    I want to try to use Git to keep a repository of all code I work on from now on.
